<Window x:Class="MULTITUDE.CustomControl.CanvasSpaceWindow.DelightfulImageBrowser"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MULTITUDE.CustomControl.CanvasSpaceWindow"
        xmlns:com="clr-namespace:MULTITUDE.CustomControl.Components"
        mc:Ignorable="d"
        Title="Media Player" 
        d:DesignWidth="1366" d:DesignHeight="768" PreviewKeyDown="Window_KeyDown" Closed="Window_Closed"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        WindowStartupLocation="CenterScreen" Style="{StaticResource CanvasSpaceWindow}">
    <Grid Background="Gray">
        <!-- Image Navigation Mode Grid -->
        <Grid x:Name="ImageNavigatorGrid"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
            <!-- Background Image -->
            <Image Opacity="0.35" Source="{Binding NavigatorSelectedImage}" Stretch="UniformToFill">
                <Image.Effect>
                    <BlurEffect Radius="5"/>
                </Image.Effect>
            </Image>
            <!-- Presentation Image -->
            <Image x:Name="NavigatorHighlightImage" HorizontalAlignment="Center" VerticalAlignment="Center" 
                   Stretch="Uniform" Margin="40" Source="{Binding NavigatorSelectedImage}"
                   MaxWidth="{Binding RelativeSource={RelativeSource Self}, Path=Source.Width}" 
                   MaxHeight="{Binding RelativeSource={RelativeSource Self}, Path=Source.Height}"
                   MouseDown="NavigatorHighlightImage_MouseDown" MouseUp="NavigatorHighlightImage_MouseUp"
                   MouseWheel="NavigatorHighlightImage_MouseWheel" MouseMove="NavigatorHighlightImage_MouseMove" RenderTransformOrigin="0.5,0.5">
                <Image.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform x:Name="NavigationImageScale" ScaleX="1" ScaleY="1"/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform x:Name="NavigationImageTranslation" X="0" Y="0"/>
                    </TransformGroup>
                </Image.RenderTransform>
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect ShadowDepth="0"/>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="SizeAll"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>

            </Image>
            <!-- Image scroll -->
            <DockPanel x:Name="ImagePreviewScrollPane" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="10">
                <DockPanel.Resources>
                    <Style TargetType="Image">
                        <Setter Property="Stretch" Value="Uniform"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="NavigationArrowStyle" TargetType="Image">
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect ShadowDepth="0" Color="White" BlurRadius="0"/>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="Opacity" Value="1" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.300" To="5" Storyboard.TargetProperty="Effect.BlurRadius" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.150" To="0" Storyboard.TargetProperty="Effect.BlurRadius" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>
                    <Storyboard x:Key="BlinkAnimation" Storyboard.TargetProperty="(Opacity)">
                        <DoubleAnimation From="1" To="0.5" Duration="0:0:0.3"/>
                        <DoubleAnimation From="0.5" To="1" Duration="0:0:0.3"/>
                    </Storyboard>
                </DockPanel.Resources>
                <Image x:Name="LeftArrow" Source="{StaticResource SquareArrowLeft}" Width="30" Height="80" MouseLeftButtonDown="LeftArrow_MouseDown"
                       Style="{StaticResource NavigationArrowStyle}" Opacity="{x:Static local:DelightfulImageBrowser.InterfaceInactiveOpacity}"/>
                <!-- Might add some blink animation during shifting -->
                <Image Source="{Binding NavigatorL3Image}"  Width="32" Height="32" Opacity="0.2" MouseLeftButtonDown="L3Image_MouseDown">
                    <Image.Effect>
                        <BlurEffect Radius="3"/>
                    </Image.Effect>
                </Image>
                <Image Source="{Binding NavigatorL2Image}"   Width="64" Height="64" Opacity="0.4"  MouseLeftButtonDown="L2Image_MouseDown">
                    <Image.Effect>
                        <BlurEffect Radius="2"/>
                    </Image.Effect>
                </Image>
                <Image Source="{Binding NavigatorL1Image}"   Width="96" Height="96" Opacity="0.75"  MouseLeftButtonDown="L1Image_MouseDown">
                    <Image.Effect>
                        <BlurEffect Radius="1"/>
                    </Image.Effect>
                </Image>
                <Image Source="{Binding NavigatorSelectedImage}"  Width="128" Height="128" Opacity="1"/>
                <Image Source="{Binding NavigatorR1Image}"   Width="96" Height="96" Opacity="0.75"  MouseLeftButtonDown="R1Image_MouseDown">
                    <Image.Effect>
                        <BlurEffect Radius="1"/>
                    </Image.Effect>
                </Image>
                <Image Source="{Binding NavigatorR2Image}"   Width="64" Height="64" Opacity="0.4"  MouseLeftButtonDown="R2Image_MouseDown">
                    <Image.Effect>
                        <BlurEffect Radius="2"/>
                    </Image.Effect>
                </Image>
                <Image Source="{Binding NavigatorR3Image}"   Width="32" Height="32" Opacity="0.2"  MouseLeftButtonDown="R3Image_MouseDown">
                    <Image.Effect>
                        <BlurEffect Radius="3"/>
                    </Image.Effect>
                </Image>
                <Image x:Name="RightArrow" Source="{StaticResource SquareArrowRight}" Width="30" Height="80" MouseLeftButtonDown="RightArrow_MouseDown" 
                       Style="{StaticResource NavigationArrowStyle}" Opacity="{x:Static local:DelightfulImageBrowser.InterfaceInactiveOpacity}"/>
            </DockPanel>
            <!-- <Pending> Image property panel 
            <Canvas Width="{Binding ElementName=ImageNavigatorGrid, Path=ActualWidth}" Height="{Binding ElementName=ImageNavigatorGrid, Path=ActualHeight}">
                <GroupBox Header="Image Property" Canvas.Top="300" Canvas.Left="300">
                    <StackPanel>
                        <Label Content="PlaceHolder"/>
                        <Label Content="PlaceHolder"/>
                        <Label Content="PlaceHolder"/>
                        <Label Content="PlaceHolder"/>
                    </StackPanel>
                </GroupBox>
            </Canvas>-->
            <!-- Annotations for ImagePlus -->
            <Canvas x:Name="AnnotationCanvas" Width="{Binding ElementName=ImageNavigatorGrid, Path=ActualWidth}" Height="{Binding ElementName=ImageNavigatorGrid, Path=ActualHeight}">
            </Canvas>
        </Grid>

        <!-- Clue filter combo: Exposed events bound during initialization -->
        <com:FilteredClueSelectionCombo x:Name="ClueFilterComboBox" Width="250" VerticalAlignment="Top"/>

        <!-- Image Presentation Mode Grid -->
        <Grid x:Name="ImagePresenterGrid"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="Collapsed">
            <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Hidden" CanContentScroll="True">
                <ItemsControl ItemsSource="{Binding PresentationImages}" Style="{StaticResource ListBoxStyle}" Background="Black" >
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <!-- Ref: Ancient Tarot Card -->
                            <Border PreviewMouseLeftButtonDown="PresentationImageItem_MouseClick">
                                <!--
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF190D02" Offset="0"/>
                                    <GradientStop Color="#FF663002" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            -->
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Margin" Value="2"/>

                                        <Setter Property="CornerRadius" Value="6"/>
                                        <Setter Property="BorderThickness" Value="3"/>
                                        <Setter Property="Width" Value="200"/>
                                        <Setter Property="Height" Value="300"/>
                                        <Setter Property="BorderBrush">
                                            <Setter.Value>
                                                <ImageBrush ImageSource="/MULTITUDE;component/Resource/Images/Patterns/ImageBorderPattern.jpg"/>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <ImageBrush ImageSource="/MULTITUDE;component/Resource/Images/Patterns/ImageBackgroundPattern.jpg" Stretch="UniformToFill"/>
                                            </Setter.Value>
                                        </Setter>

                                        <!--https://stackoverflow.com/questions/1271375/how-to-capture-a-mouse-click-on-an-item-in-a-listbox-in-wpf-->
                                        <!--<EventSetter Event="MouseLeftButtonDown" Handler="PresentationImageItem_MouseClick"/>-->
                                        <!--<EventSetter Event="PreviewMouseLeftButtonDown" Handler="PresentationImageItem_MouseClick"/>-->
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                                                <Setter Property="RenderTransform">
                                                    <Setter.Value>
                                                        <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Image Source="{Binding}"/>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="{x:Type ContentPresenter}">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Panel.ZIndex" Value="99" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel IsItemsHost="True" Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </ScrollViewer>
        </Grid>

        <!-- Always Foreground UI Elements -->
        <!-- Mode shift button -->
        <Button x:Name="ModeShiftButton" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="20" Style="{StaticResource RoundCornerButtonThickTransparent}"
                Content="Presentation Mode" FontSize="20" Click="ModeShiftButton_Click"/>

        <!-- Image Presentation Mode Specialized Contents: Must put after Mode shift button  -->
        <!-- Presentation Image -->
        <Grid x:Name="PresentationHighlightImage" Background="BLack" Visibility="Collapsed" MouseLeftButtonDown="PresentationHighlightImage_MouseLeftButtonDown">
            <Image HorizontalAlignment="Center" VerticalAlignment="Center"
                   Stretch="Uniform" Source="{Binding PresenterSelectedImage}"
                    MaxWidth="{Binding RelativeSource={RelativeSource Self}, Path=Source.Width}" 
                   MaxHeight="{Binding RelativeSource={RelativeSource Self}, Path=Source.Height}"
                   RenderTransformOrigin="0.5,0.5">
                <Image.RenderTransform>
                    <RotateTransform x:Name="PresentationHighlightImageRotation" Angle="0"/>
                </Image.RenderTransform>
            </Image>
        </Grid>
        <!-- Image Rotation Controls -->
        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource RoundCornerButtonThickTransparent}">
                    <Setter Property="Margin" Value="20"/>
                    <Setter Property="Opacity" Value="0"/>
                    <Setter Property="Visibility" Value="{Binding ElementName=PresentationHighlightImage, Path=Visibility}"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetProperty="Opacity">
                                        <DoubleAnimation Duration="0:0:0.300" To="1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetProperty="Opacity">
                                        <DoubleAnimation Duration="0:0:0.300" To="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>
            <Button VerticalAlignment="Top" HorizontalAlignment="Left" 
                    Content="Rotate Counter-clockwise" FontSize="20" Click="RotateCClock_Click"/>
            <Button VerticalAlignment="Bottom" HorizontalAlignment="Right" 
                    Content="Rotate Clockwise" FontSize="20" Click="RotateClock_Click"/>
        </Grid>
    </Grid>
</Window>
